<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <context:annotation-config />
    <context:component-scan base-package="com.mycompany.hibernatemvn"/>

 
    
    <bean id="mongoClient" class="com.mongodb.MongoClient">
        <constructor-arg value="localhost"/>
        <constructor-arg value="27017"/>
    </bean>
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  <!--org.springframework.jdbc.datasource.DriverManagerDataSource-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/hibernate"/>
        <property name="username" value="root"/>
        <property name="password" value="1"/>
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="simpleJdbcInsert" class="org.springframework.jdbc.core.simple.SimpleJdbcInsert" scope="prototype">
        <constructor-arg  ref="dataSource"/>
    </bean>
    
 <!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames" >
            <list>
                <value>msg</value>           
            </list>
        </property>
    </bean>-->
    
    <bean id="hibernateProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.transaction.factory_class">
                    org.hibernate.transaction.JDBCTransactionFactory
                </prop>
                <!--<prop key="hibernate.transaction.manager_lookup_class">-->
                    <!--com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup-->
                <!--</prop>-->
                <!--<prop key="hibernate.cache.region.factory_class">-->
                    <!--org.hibernate.cache.jbc2.MultiplexedJBossCacheRegionFactory-->
                <!--</prop>-->
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQL5InnoDBDialect
                </prop>
                <prop key="hibernate.hbm2ddl.auto">
                    update
                </prop>
                <prop key="hibernate.show_sql">
                    true
                </prop>
                <!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.OSCacheProvider</prop>-->
                <!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
                <prop key="hibernate.connection.autocommit">false</prop>
            </props>
        </property>
    </bean>
    
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="packagesToScan" 
                  value="com.mycompany.hibernatemvn.DB.Entities"/> 
  
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties" ref="hibernateProperties"/>
    </bean>

    <bean id="hibernateTemplate"
          class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!--<bean id="enterpriseDAO" class="com.mycompany.hibernatemvn.DB.DAO.SpringHibernateImpl.EnterpriseDAOImpl"/>-->

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
  <!-- <bean id="enterpriseDAO" class="com.mycompany.hibernatemvn.DB.DAO.JDBCImpl.JDBCSpringPersonDao">
        <constructor-arg ref="jdbcTemplate"/>
    </bean>
   <bean id="hibernateUtils" class="com.mycompany.hibernatemvn.DB.utils.HibernateUtils" factory-method="getHibernateUtils"/>
  
    <bean id="enterpriseDAO" class="com.mycompany.hibernatemvn.DB.DAO.HibernateImpl.EnterpriseDAOImpl">
        <constructor-arg ref="hibernateUtils"/>
    </bean>
   
    <bean id="enterpriseTypeDAO" class="com.mycompany.hibernatemvn.DB.DAO.HibernateImpl.EnterpriseTypeDAOImpl">
        <constructor-arg ref="hibernateUtils"/>
    </bean>
    
    <bean id="departmentTypeDAO" class="com.mycompany.hibernatemvn.DB.DAO.HibernateImpl.DepartmentTypeDAOImpl">
        <constructor-arg ref="hibernateUtils"/>
    </bean>
    
    <bean id="departmentDAO" class="com.mycompany.hibernatemvn.DB.DAO.HibernateImpl.DepartmentDAOImpl">
        <constructor-arg ref="hibernateUtils"/>
    </bean>
    
    <bean id="employeeDAO" class="com.mycompany.hibernatemvn.DB.DAO.HibernateImpl.EmployeeDAOImpl">
        <constructor-arg ref="hibernateUtils"/>
    </bean>
    
     <bean id="employeeTypeDAO" class="com.mycompany.hibernatemvn.DB.DAO.HibernateImpl.EmployeeTypeDAOImpl">
         <constructor-arg ref="hibernateUtils"/>
     </bean>
    -->
</beans>
